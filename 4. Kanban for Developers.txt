# 4. KANBAN FOR DEVELOPERS
--------------------------

* Lean History
--------------
Origin of Kanban ---> Lean Manufacturing Principles ---> (Toyota Production System)

INVENTORY ---> Aligning ---> Production Rate			Consumption Rate

* Little's Law
--------------

	L = L'W (L' = lambda)

	Average Number of Customers (L) = Arrival Rate (L') x Average Time Spent (W)


* Example:
----------
	
	L(4) = Lambda(8) * W(0.5) 


* Little's Law in Software Development (!!!! GAZPROM PROJECT ---> THIS IS VERY IMPORTANT FOR OUR PROJECT !!!!)
--------------------------------------

	L = L'W
	
	Work in Progress (L) = Completion Rate(L') x Cycle Time (W)


* Cycle Time
------------
Cycle time is the total time of a work item:

	Analysis	Design		Implementation		Deployment 


The idea is to minimize cycle time, because we want to produce valuable software faster.


------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Kanban board
--------------

* Kanban
--------
Japanese:

Kan = Visual

Ban = Card


------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Limiting work in progress (WIP)  (!!!! GAZPROM PROJECT ---> THIS IS VERY IMPORTANT FOR OUR PROJECT !!!!)
---------------------------------

WHEN WE WORK IN MORE THAN ONE ITEM WE ARE STILL ONLY WORKING ON ONE ITEM AT A GIVEN POINT IN TIME. WE SWITCH BETWEEN ITEMS, AND ITS SWITCH CAUSES A LOSS IN PRODUCTIVITY, BECAUSE IT TAKES
TIME TO BE FULLY PRODUCTIVE ON THE SECOND TASK.

	* HUMANS ARE NOT PRODUCTIVE AT TASK SWITCHING LIKE COMPUTERS.

	* TOO MANY WORK ITEMS CAUSES DISTRACTIONS AND LOWERS PRODUCTIVITY.

* LIMITING WIP
--------------
. Firstly we need to have something to work on, when the only item in a column (For example the “In progress” column, is blocked.

. Not all steps in a process are equal in duration.  Steps that are lower in duration may delay items that comes from previous faster steps.


------------------------------------------------------------------------------------------------------------------------------------------------------------------

* How to set WIP limits
-----------------------

* Set WIP Limits
----------------
. Kanban teams can set WIP limits to the number of the team members plus a buffer. This means that team as a unit, cannot have more work items than the WIP limit.

The buffer adds a few extra tasks that allows team members to fall back to if other tasks become blocked.

* Example:
----------
WIP = Team members (6) + 50% Buffer (3) = Team members + Buffer (9)



* calculate Step WIP
--------------------
WIP limits can be set up at each of the process.

* Step 1: Find the slowest step (average duration per work item per person) ---> The slowest step is the step that takes the maximum amout of time per person.

* Step 2: WIP of that step = Number of people working on that step, plus a buffer.

* Step 3: Adjust WIP of other faster steps proportionally.

* Step 4: Continue to adjust based on experience.


* Doing and Done
----------------
. Completion criteria defined for each step.

. Work item must meet completion criteria before moving from Doing column to Done Column.

. Process enforces stricter quality criteria.


* Kanban Daily Standup
----------------------
. Focused on identifying and addressing bottlenecks.

. Efficiency is the priority.

. All status updates visible on Kanban board.


------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Kanban vs. scrum
------------------
. Scrum is a framework, Kanban is a process management tool

. Kanban is more lightweight than Scrum

. Kanban can be combined with Scrum (Srumban) but each can also be used independently


* Kanban
--------
. Developer-friendly and simple process

. No mandatory time-boxed events

. One product backlog

. Daily stand-up focused only on bottlenecks

. No defined roles

. Manage work in progress (WIP) and continuosly improve

Tool ---> LeanKit











































































