# 5. SCALING AGILE
------------------

* Scaling Agile
---------------

* Why Scale Agile?
------------------
. One product with too many features to be developed in a specific timeframe

. One team cannot feasibly produce large amounts of features

. Business case to ship those features to market in a specific timeframe compels organization to scale


* Rules of Scaling
------------------
. Don't scale if you don't have to.

. Scale slowly: Continuously identify and address challenges and minimize dependencies.

. Develop architectural standards and guidelines before scaling.


--------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Scaling frameworks
--------------------

* Nexus
-------
. Developed by Ken Schwarber, coinventor of Scrum

. Essentially Scrum with one additional artifact, a few additional events, and one additional team role

. Principles of Scrum also apply to Nexus

. Execution is like running multiple Scrum teams in parallel that produce one integrated product increment at end of sprint.


* Scrum@Scale
-------------
. Developed by Jeff Sutherland, coinventor of Scrum

. Like Nexus, is an implementation of Scrum by several teams in parallel

. Scrum@Scale can be scaled infinitely


--------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Scaling frameworks, continued
-------------------------------

* LESS
------
. Developed by Craig Larman and Bas Vodde

. Does not violate any rules of Scrum

. More prescriptive than other scaling frameworks

. Framework designed to work with two to eight teams and one product owner, with one Scrum master per one to three teams

. Introduces the overall retrospective, and event that occurs after the sprint retrospective

. Extension of framework for more than eight teams is LeSS Huge

. Less Huge introduces area product owner as new role


* Scaled Agile Framework (SAFe)
-------------------------------
. Undergone several versions since initial release in 2011

. Uses Scrum constructs, but also uses a combination of other agile frameworks

. Works at multiple levels; the base levels required for SAFe implementation are called program and team

. Combination of levels form the configurations Essential SAFe, Full SAFe, Large Solution SAFe, and Portfolio SAFe

. Smallest team unit is similar to a typical agile team

. Multiple teams work in parallel at the team level

. Work from all agile teams combined to produce product increment at the program level











































